;; -*- mode: clojure; -*-
;; vim: filetype=clojure
;;@formatter:off

;; Log goes to stdout
(logging/init)

;; Disable riemann internal events
(instrumentation {:enabled? false})

;; Expired events will flow back into the streams with state 'expired',
;; between TTL and TTL + periodically-expire seconds.
;; We set the periodically-expire to a small value (2 sec) for this example.
(periodically-expire 2)

;; Start the server
(let [host "0.0.0.0"]
  (tcp-server {:host host}))

;; The rule as explained in the blog post
(let [pd (pagerduty "01234567890123456789012345678901") ;; Put your pd API key here.
      index (index)
      async-pd (async-queue!
                :pd-queue
                {:queue-size 100
                 :core-pool-size 4
                 :max-pools-size 100}
                (:trigger pd))]
  (streams
   (where (service "Heartbeat")  (default {:ttl 10} index))
   (by :host
       (where (and (service "Heartbeat") (state "expired"))
              (throttle 1 60 prn)
              (throttle 1 3600 async-pd)))))
